[{"content":"\rHi, I\u0026rsquo;m Garrett!\nI\u0026rsquo;m an Electrical Engineer at DEKA Research and Development. My interest are in power systems, embedded systems, circuits, and computer networking. I love working on small, fast paced teams under pressure to solve complex technical problems. In my free time I enjoy making projects, hanging out with friends, running, and bowling. I\u0026rsquo;m also a FIRST Robotics mentor of 10 years. In this website you\u0026rsquo;ll find more information about me and the projects I like to work on.\n","date":null,"permalink":"/","section":"Home Page","summary":"Hi, I\u0026rsquo;m Garrett!","title":"Home Page"},{"content":"Pi-Drive #Car data logging stack with raspberry pi collection front end and Java Spring Boot API backend. Every vehical sold in the US since 1996 is required to support the OBD-II protocol. OBD-II is focused on providing emissions data and exposes things like fuel consumption, coolant temperature, vehical speed, engine RPM, etc. This data can be useful for gaining an insight into your cars performance, especially if you have an older car like mine with the check engine light stuck on. The goal of this project is to record as much OBD data as I can and then visualize it in Grafana. I\u0026rsquo;m not a car guy and I\u0026rsquo;m not interested in tuning or getting max performance out of my car. I simply want to monitor its health and properly maintain it. Cars are expensive!\nTechologies Used # Java Spring Boot RESTFul API InfluxDB (Timeseries SQL database) Docker Grafana (Visualization) Anisble (Automate raspberry pi configuration) Python OBD-II Overview #The data collection is handeled by a bluetooth OBD reader and a raspberry pi. When powered on the pi continously checks for the bluetooth dongle and, if present, reads data from it. The data is then written to a local database on the pi. Also while powered on, another process is continously checking if I\u0026rsquo;m connected to my home wifi. If I am connected to my wifi then this process will ask my telemetry server what was the timestamp of the last piece of data it received. If the timestamp for the latest data on the local raspberry pi database is more recent than the timestamp of the telemetry server then the raspberry pi will send telemetry records one at a time to the telemetry server. This is nice because if the pi looses connection to the telemetry server (e.g I drive my car somewhere else) then the pi will pick up where it left off the next time its within range of my wifi.\nThe telemetry server is a simple RESTful API written in Java using the Spring Boot framework. It only has two core jobs: receive telemetry data and write telemetry data to InfluxDB. Before telemetry data can be received the server must be told about the existance of a car via the /cars endpoint. After the server is told about a car a unique ID is generated and telemetry data can be sent to the server via the /cars/{id}/telemetry endpoint. To check what cars exist and find a car\u0026rsquo;s id the /cars endpoint can be queried.\nRecreate the project #Checkout my github for steps on recreating this project.\nUseful Resources # HTTP 1.1 standard lays out the definition and uses of GET, POST, PUT, and delete REST APIS vs RPC What actually makes something RESTful? Using HTTP request is not enough Hypertext Application Language (HAL) how to navigate hyperlink resources in an API Getting started with spring RESTful API a pretty indepth guide at setting up spring to serve a RESTful API InfluxDB data point how data is stored in InfluxDB How you should design a schema High Series Cardinality How and why to avoid high series cardinality ","date":"Sat October 26, 2024","permalink":"/projects/pidrive/","section":"Projects","summary":"Car data logging stack with raspberry pi collection front end and Java Spring Boot API backend","title":"PiDrive - Car Data Logger"},{"content":"","date":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects"},{"content":"Overview #I wanted to make a christmas gift for some family members and I came up with this. My roommate had designed this maple leaf with our school logo in the center for the school to 3D print and give out. I thought it would be really cool to waterjet the leaf out of metal and paint it. And then the idea snowballed from there\u0026hellip; What I ended up with was a combination of an electrical and woodworking project. Part of what made this a cool project was how many tools I got to use making it: waterjet, table router, hand router, sand blaster, soldering tools, lab bench supplies, etc. I did change from a 2K resistor for the LEDS. My batteries ended up giving me around a 6V supply. The LEDS are not at full brightness because there are 8 of them. But, that\u0026rsquo;s ok for this project. Dimmer is actually better for what I wanted.\nI used a simple RC circuit to hold the base of a mosfet on to keep the LEDS on. There is a small button routed into the side of the wood, where the black paint is on the left of this image. Knowing the time constant, tau, is RC, and that in 4 tau a circuit will charge to, or discharge to, ~98% of its final value, I found a RC pair that got me a few seconds of on time as a starting value. I played with the values on a breadboard from there to see what values I liked. Because the charge and discharge is exponential the lights ended up with a nice fade effect too.\nThe hardest part of this mini project ended up being the batteries! Making a battery holder was surprisingly difficult! Not it theory, but in practice\u0026hellip; I also tried to make a diffuser for the LEDS by putting a layer of epoxy in front of them. This worked ok but not great.\n","date":"Tue December 12, 2023","permalink":"/projects/light-up-engraved-wood-logo/","section":"Projects","summary":"Blending wood working and electronics","title":"Light Up Engraved Wooden Logo"},{"content":"Overview # View the project on my github! Some homework problems for an interview with Higher Ground LLC.\nThis started as a mini homework assignment but turned into a cool mini-project. I did some BPSK modulation and demodulation and plotted its IQ constellation. I threw this all into a flask app to visualize it. I added the abilty to put AWGN onto the modulated data to make it a little less boring and not a perfect bpsk IQ. You can asjust the power of the noise on the web page too. I experimented with using chatgpt to generate the flask app for me. I did this for a couple reasons. First, this was an extra feature on top of the assignment so I did not subtract from its purpose or integruity. Second, I\u0026rsquo;m taking a course on deep learning right now, and it\u0026rsquo;s timely relavent for me to use chatgpt and get a better feel for how to feed it good prompts. I\u0026rsquo;m also trying to gain some intuition for its behavior. My final project in that class is using the chatgpt api to make a calendar planning / scheduling assistant. So, this allowed me to both play with chatgpt more and also add a cool feature to this project. Lastly, I though this all in docker, both to answer part of the homework for higher ground and because it was quick and easy. I\u0026rsquo;ve worked with docker a lot the past couple summers at my jobs, and at home in my homelab.\nRepo Files #app app.py (Flask web app with the HTML page embedded in it. Renders the website) utilities.py (DSP functions which are called by the flask app to modulate, demodulate, and plot) README.md Dockerfile requirements.txt .gitignore Usage #ENV #Setup a python environment to keep your local environment clean.\nvirtualenv ./env source ./env/bin/activate pip install -r requirements.txt Build Docker # docker build --tag bpsk . check the image exist with docker iamages Run Docker # docker run -p 5000:5000 bpsk Useful Resources #I knew the background of a lot of this before doing this project but I had not written any code to handle of this before. Even still, I found the docs for pysdy to be super well written and easy to follow. Definitly worth a read!\npysdr modulation pysdr IQ sampling pysdr pulse shaping not as related but also good read pysdr link budget related to the paper in the attached pdf Example # ","date":"Thu November 23, 2023","permalink":"/projects/bpsk-modulation-web-app/","section":"Projects","summary":"Simple web app demonstrating BPSK modulation and demodulation","title":"BPSK Gaussian Noise Simulation Webapp"},{"content":"Overview #During college I took an elective on switching power supplies. During the 10 week period, my lab partner and I designed and built a linear power supply (120V AC -\u0026gt; 15V DC), a boost converter (12-14V -\u0026gt; 25V), and a buck boost converter (12-14V -\u0026gt; -25V). This was a very hands on course which tought me many practical skills. My biggest take away from this course was the impact of layout on the performance of a circuit, or even if the circuit works at all.\nBoost Converter # A boost converter I built in 2023 for a power supply course. The converter is built for 12-14V in and 25V out at 2A. During this course I also built a 120V AC-DC linear power supply, also rated for 25V at 2A.\nShown here is the bottom of the boost converter. We used wire wrapping instead of soldering for any non-high current connections. This largely due to preference of the instructor, but it was a nice skill to learn and definitely had some advantages during debugging with easily being able to unwrap a pin on an IC.\nHere is my annotated schematic for the boost converter. For this course we were taught the theory and operation of various power supply typologies and then had to go actually design and build them. Although we were provided the schematic for the labs, this was to speed up the lab process to complete building three power supplies in 10 weeks. Most parts were calculated and then picked by the students, as seen by the empty part values on the schematic. I used mathcad and some equations for a boost converter, along with IC datasheets, to pick components to guarantee output ripple, output voltage and switching time.\nBuck Converter # The third power supply I built was a buck-boost converter for 12-14V in and -25V out at 2A.\nShown here is the bottom of the buck-boost supply. Something that I learned from this project was the careful consideration for the physical construction of a switching power supply. Specifically, the need to minimize the area of the two high current loops on the input and output because of their ability to create lots of EMI. This was actually an issue for my power supply that was hard to debug. The issue was that there was so much noise being generated that the current sense wire on the SG2535A would pick up the noise and trigger the current limit, a pulse-by-pulse current limit, turning off the gate driver for that pulse and turning off the power supply output.\nHere is the schematic for the buck-bojpegost converter. Unfortunately, I\u0026rsquo;ve lost my annotated notes for this power supply. This power supply I actually struggled to get the last piece working (the -12V inverting charge pump shown in the middle right). The charge pump is driven by a 555 timer and is used to supply the negative rail to the LM324 op amp.\n","date":"Sun September 10, 2023","permalink":"/projects/switching-power-supplies/","section":"Projects","summary":"A boost and buckboost power supply","title":"Switching Power Supples"},{"content":"Overview #This is a CAN bus project I made for a short, 2 week final project. The project goal was to simulate a car can bus with two MCU\u0026rsquo;s. One MCU read sensor input and sent it over the CAN bus. The other read data from the CAN bus and displayed the status of the sensors. I wrote a SPI driver for the texas instruments board, because it lacked a CAN peripheral onboard, a library using my SPI driver for a SPI to CAN controller, a CAN driver for a STM32 board, and application code for each MCU (including configuring all the peripheral registers, interrupts, ADCs, and timers). In this image I am verifying my library for the SPI to CAN controller. Specifically, I am looking at SPI frames coming from my library and comparing them against the controllers datasheet. I have an arduino connected with the same controller on the CAN bus running a known, good and tested library to verify if my library was sending and receiving CAN messages correctly. ","date":"Tue September 5, 2023","permalink":"/projects/simulated-car-can-bus/","section":"Projects","summary":"A simple CAN bus demonstration","title":"Simulated Car CAN Bus"},{"content":"Overview #During my freshman year I wanted a way to turn on and off a set of lights in my room without getting out of bed. Although slightly overkill, I decided to make a latching circuit. This is the prototype of the circuit.\nHere is my latching circuit on perf board and mounted to my loft. It\u0026rsquo;s nothing fancy but served its purpose and I used it many times a day for the entire year. It never failed me! The latch would toggle a relay, which turned on and off a set of rope lights. Something scrappy I did was take a usb charging brick and steal the 5V pins from its output USB to get 5V to my circuit from AC wall power. ","date":"Tue September 10, 2019","permalink":"/projects/room-light_control/","section":"Projects","summary":"Latching transitor circuit for light control","title":"Room Light Control Circuit"},{"content":"\rWhile pursing my Electrical Engineering degree from Rose-Hulman Institute of Technology I founded and led a nationally competitive rocketry program, organized a funding campaign to bring $100,000+ to the univierity\u0026rsquo;s Innovation Center, architected and built an enterprise server rack for my peers, devoted 1000\u0026rsquo;s of hours to mentoring FIRST robotics programs, and worked 15 hr/week to support myself through school. Throughout these endoviors, I was nominated and awarded multiple honors for my work ethic, character, and impact on those around me. Along with my coursework, these projects helped strengthen my electrical background and software development skills that I apply to my current job and personal projects.\nTechnical Skills Summary # Programming Languages Java • Python • C • Matlab • Labview Operating Systems Linux • Windows • WSL • MacOS Developer Tools Git • Github • Deveops / Gitops • CI / CD • Agile • Jira • Azure Could Platform Software Technologies Docker • Kubernetes • Kafka • Grafana • Prometheus • Ansible • TrueNAS • ArgoCD Other Technologies PTI / PSSE • CAN • Soldering • Altium Designer Disciplines Computer Networking • Signal Processing • Embedded Systems • PCB Development Work Experience #DEKA Research and Development # Electrical Engineer Manchester, NH May 2024 - Present • Verify PCB assemblies for technical accuracy upon arrival\n• Utilize test bench equipment to debug, repair, and modify PCBs\n• Perform Electromagnetic Compatibility (EMC) testing and analysis for new product line\nUrsa Major Technologies # Software Engineering Intern Denver, CO May 2023 - Aug 2024 • Developed a mission critical monitoring application of hydrogen peroxide to support upgrades of the engine test stands. Prometheus and Grafana were used to collect and visualize data essential for safe test stand operation, saving the company an estimated $200,000 in wasted hydrogen peroxide each year\n• Utilized Kubernetes, Docker, CI/CD, and Apache Kafka to create an event driven software architecture from scratch\nExpand to learn more!\r• Enabled the automatic control of rocket engine test stand lights via custom Python library\n• Outperformed expectations while learning Kubernetes on-the-job for the first time\n• Continued to deliver high quality products ahead of their delivery schedule during a tenuous company time\n• Integrated into a team of 5 software engineers who write and maintain Ursa\u0026rsquo;s core software infrastructure\nKratos Space and Defense # Software Engineering Intern Colorado Springs, CO June 2022 - Sept 2023 • Increased signal acquisition bandwidth from 30 to 500 MHz for the Kratos Global Sensor Network (KGSN)\n• Built a Python library to utilize new RF signal digitizers. Library was deployed world wide on KGSN\nExpand to learn more!\r• Worked on a newly formed team of 10 to test bringing new software technologies to market\n• Integrated existing, internal C++ framework into large python codebase via REST interface\n• Assembled a 4.5 meter parabolic antenna for 40Ghz in the Ka band\nNASK Inc # Software Engineering Intern Dayton, OH May 2023 - Aug 2024 • Increased accuracy of signal capturing software by applying C++ bug fixes to X-Midas primitives to guarantee signal acquisition would occur within 13-33 microseconds of the desired start time, depending on signal bandwidth\n• Reduced setup time of RF signal acquisition machines by automating the install of CentOS Linux\n• Utilized RedHat Linux Kickstarts to allow for CentOS to be installed and configured automatically over the network using the PXE protocol\nAltec Inc # Core Controls Developer Co-op Dayton, OH May 2023 - Aug 2024 • Developed a tool capable of logging hundreds of configuration parameters from several CAN devices automatically to assist manufacturing testing and verification\n• Worked with several CAN technologies and tool-chains such as CAN open, CCP, vectorCAN, wireshark, socketCAN, and proprietary CAN protocols\n• Built and debugged embedded Linux applications utilizing Buildroot, GDB, and other unix development tools\nProject Experience #Car Data Logger #• Developing software stack to collect and monitor car telemetry following a micro-service architecture model\n• Data is ingested via a dockerized RESTful API powered by Java Spring Boot and visualized via Grafana\nNASA Student Luanch #• Established Rose-Hulman’s first rocketry competition team, growing to 40 active students within two years\n• Logged 1000+ hours of design and fabrication work in less than 2 years while enrolled full time and working 15-20 hr/wk\n• Presented complex technical information to a panel of NASA engineers through a series of 3 design reviews per year\nSwitching Power Supplies #Project Page\n• Designed a built a boost converter 12-14V → 25V, 50W\n• Designed and built a buck-boost converter 12-14V → -25V, 50W\nServer Rack #\r• Architected, deployed, and maintained a server solution to 300+ student peers to accelerate engineering design cycles\n• Specifications: ~400 CPU cores, 2TB RAM, and 40TB NAS\nHonors and Awards #Student Representative to Univerity Presidental Comitte # Rose-Hulman Institute of Technology Aug 2023 - Jan 2024 Most Valuable Competition Team Member # Brannam Innovation Center April 2023 FIRST Robotics Woodie Flowers Mentor Award # FIRST Robotics Program March 2022 Outstanding Student Leader Award # Rose-Hulman Institute of Technology Jan 2021 ","date":null,"permalink":"/about/","section":"Home Page","summary":"While pursing my Electrical Engineering degree from Rose-Hulman Institute of Technology I founded and led a nationally competitive rocketry program, organized a funding campaign to bring $100,000+ to the univierity\u0026rsquo;s Innovation Center, architected and built an enterprise server rack for my peers, devoted 1000\u0026rsquo;s of hours to mentoring FIRST robotics programs, and worked 15 hr/week to support myself through school.","title":"About"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"\rPrevious\rNext \u0026nbsp; \u0026nbsp;\r/ [pdf]\rView the PDF file here.\r","date":null,"permalink":"/resume/","section":"Home Page","summary":"Previous\rNext \u0026nbsp; \u0026nbsp;\r/ [pdf]\rView the PDF file here.","title":"Resume"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]